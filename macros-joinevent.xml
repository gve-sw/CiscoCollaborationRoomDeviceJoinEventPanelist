<?xml version="1.0"?>
<Command>
      <UserInterface>
         <Extensions>
            <Panel>
               <Save>
                  <PanelId>panelist_join_event</PanelId>
                  <body>&lt;Extensions&gt;
                        &lt;Version&gt;1.5&lt;/Version&gt;
                        &lt;Panel&gt;
                        &lt;Type&gt;Home&lt;/Type&gt;
                        &lt;Icon&gt;Webex&lt;/Icon&gt;
                        &lt;Order&gt;1&lt;/Order&gt;
                        &lt;Color&gt;#30D557&lt;/Color&gt;
                        &lt;Name&gt;JoinEvent&lt;/Name&gt;
                        &lt;/Panel&gt;
                        &lt;/Extensions&gt;</body>
               </Save>
            </Panel>
         </Extensions>
      </UserInterface>

      <Macros>
         <Macro>
            <Save>
               <Name>JoinEventPanelist</Name>
               <Overwrite>False</Overwrite>
                  <body>
const xapi = require('xapi');

const EVENT_JOIN_URI='999999999@webex.com';
const EVENT_PIN='000000';

const EVENT_PARTICIPANT_ROLE='Panelist'; // could be Panelist, Host or Guest
const BTN_JOIN_EVENT_PANELIST = 'panelist_join_event'

var theRemoteNumber="";
var isReceivingConfCallEvents = 0;

function sendTouchTones(password) {
    xapi.command('Call DTMFSend', { DTMFString: password });
  }

// to add delays when or if needed.
function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

xapi.event.on('CallDisconnect', (event) => {
    // nothing for now
    console.log("call ended");
    isReceivingConfCallEvents = 0;
    });


xapi.event.on('CallSuccessful', () => {
    if (isReceivingConfCallEvents==0) {
        xapi.status.get('Call')
          .then((call) => {
            console.log("CallSuccesful: The CallbackNumber is:", call[0].CallbackNumber);
            console.log("Comparing theRemoteNumber with EVENT_JOIN_URI...");
            theRemoteNumber=call[0].CallbackNumber;
            if (theRemoteNumber.includes(EVENT_JOIN_URI)) {
                console.log("dialing pin....");
                sendTouchTones(EVENT_PIN+"#");
                // uncomment below if you want the call to start muted
                //setMute(true);
            }

        });
    }
    });

// once a call connects, invoke this handler to determine if a conference ID should be prompted for.
xapi.status.on('Conference Call AuthenticationRequest', (request) => {

    console.log("The request is:", request);
    if (request=="PanelistPin") {
        isReceivingConfCallEvents = 1;
        // first assign theRemoteNumber to later check if the same when detected call
        theRemoteNumber="";
        xapi.status.get('Call')
                    .then(call => {
                    console.log('Detected a connected call: ');
                    theRemoteNumber=call[0].CallbackNumber;
                    console.log("in conf call event, theRemoteNumber= ",theRemoteNumber);
                    console.log("Comparing theRemoteNumber with EVENT_JOIN_URI...");
                    if (theRemoteNumber.includes(EVENT_JOIN_URI)) {
                        console.log("sending auth response....");
                        xapi.command('Conference Call AuthenticationResponse', { ParticipantRole:EVENT_PARTICIPANT_ROLE, Pin: EVENT_PIN+"#" });
                        // uncomment below if you want the call to start muted
                        //setMute(true);
                    }
                    });
    }
    });

// handle pressing the panel button: call into the Webex Events session
xapi.event.on('UserInterface Extensions Panel Clicked', (event) => {

    if(event.PanelId == BTN_JOIN_EVENT_PANELIST){
        // call webex event
        console.log("Actual number to dial: ",EVENT_JOIN_URI);
        xapi.command("dial", {Number: EVENT_JOIN_URI});
    }


});
</body>
            </Save>
            <Activate>
               <Name>JoinEventPanelist</Name>
            </Activate>
         </Macro>
         <Runtime>
      <Restart command='True'></Restart>
    </Runtime>
      </Macros>
   </Command>